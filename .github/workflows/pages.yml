name: Deploy UI to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: {}

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    # Bind to the 'preview' environment so environment-scoped secrets are available
    environment: preview
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: apps/ui/package-lock.json

      - name: Install UI deps
        run: npm ci
        working-directory: apps/ui

      - name: Write .env for Vite (no logging)
        working-directory: apps/ui
        run: |
          set -euo pipefail
          printf "VITE_SUPABASE_URL=%s\n" "${{ secrets.VITE_SUPABASE_URL }}" > .env
          printf "VITE_SUPABASE_ANON_KEY=%s\n" "${{ secrets.VITE_SUPABASE_ANON_KEY }}" >> .env
          printf "VITE_BACKLOG_TAB_LABEL=%s\n" "${{ secrets.VITE_BACKLOG_TAB_LABEL }}" >> .env
          printf "VITE_APP_TITLE=%s\n" "${{ secrets.VITE_APP_TITLE }}" >> .env
          printf "VITE_BUILD_SHA=%s\n" "${{ github.sha }}" >> .env
          printf "VITE_BUILD_TIME=%s\n" "$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> .env
          
          # Apply defaults if secrets are empty
          sed -i '/^VITE_BACKLOG_TAB_LABEL=$/s/$/Dashboard/' .env
          sed -i '/^VITE_APP_TITLE=$/s/$/Surgery Schedule/' .env

      - name: Sanity check env (names only)
        working-directory: apps/ui
        run: |
          set -euo pipefail
          awk -F '=' '{ printf "env: %s=[set]\n", $1 }' .env

      - name: Build UI (Vite)
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          GITHUB_ACTIONS: 'true'
          PR_PREVIEW: ${{ github.event_name == 'pull_request' && '1' || '0' }}
        run: npm run build
        working-directory: apps/ui

      - name: Create SPA 404 fallback (GitHub Pages)
        run: |
          cp apps/ui/dist/index.html apps/ui/dist/404.html

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: apps/ui/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
